apiVersion: v1
kind: Service
metadata:
  name: central-lib-svc
  labels:
    app: central-lib
spec:
  type: NodePort
  ports:
    - nodePort: 31035
      port: 80
      protocol: TCP
      targetPort: 8080
      name: central-lib
  selector:
    app: central-lib
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: central-lib
spec:
  selector:
    matchLabels:
      app: central-lib # has to match .spec.template.metadata.labels
  serviceName: "central-lib"
  replicas: 1
  minReadySeconds: 10 # by default is 0
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: central-lib # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: central-lib
          image: rruzicic1/lib-central
          ports:
            - containerPort: 8080
              name: central-lib
          env:
            - name: DB_CONNECTION_STRING
              value: postgres://postgres:pass@localhost:5432/postgres?sslmode=disable
        - name: central-db
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
              name: central-db
          env:
            - name: POSTGRES_PASSWORD
              value: pass
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - "pg_isready"
                - "-d"
                - "postgres"
            initialDelaySeconds: 5
            periodSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50M
